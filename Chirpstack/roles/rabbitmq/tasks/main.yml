- name: Clone RabbitMQ docker compose
  git:
    repo: https://github.com/lhc/rabbitmq-docker
    dest: /home/{{ansible_user}}/rabbitmq
    clone: yes
    update: yes
    force: yes
    version: main
  become: no

- name: Create .env file
  copy:
    content: |
      RABBITMQ_ADMIN_USER={{broker.admin_user}}
      RABBITMQ_ADMIN_PASSWORD={{broker.admin_password}}
    dest: "/home/{{ansible_user}}/rabbitmq/.env"
    mode: '0644'

- name: Tear Downs Docker Compose stack
  community.docker.docker_compose:
    project_src: "/home/{{ansible_user}}/rabbitmq"
    files: docker-compose.yml
    pull: true
    state: absent

#The parameter below are used to connect with remote postgres and values are envrypted located in secrets.yml
- name: Run docker-compose
  community.docker.docker_compose:
    project_src: "/home/{{ansible_user}}/rabbitmq"
    files: docker-compose.yml
    state: present
    pull: true

- name: Wait for RabbitMQ to be ready
  wait_for:
    host: "{{inventory_hostname}}"
    port: 15672
    timeout: 60

- name: Create MQTT user
  uri:
    url: "http://{{inventory_hostname}}:15672/api/users/{{broker.user}}"
    method: PUT
    user: "{{broker.admin_user}}"
    password: "{{broker.admin_password}}"
    body_format: json
    body: |
      {
        "password": "{{broker.password}}",
        "tags": "mqtt"
      }
    status_code: [201, 204]
    force_basic_auth: yes

- name: Create chirpstack vhost
  uri:
    url: "http://{{inventory_hostname}}:15672/api/vhosts/%2Fchirpstack"
    method: PUT
    user: "{{broker.admin_user}}"
    password: "{{broker.admin_password}}"
    status_code: [201, 204]
    force_basic_auth: yes

- name: Set permissions for MQTT user
  uri:
    url: "http://{{inventory_hostname}}:15672/api/permissions/%2Fchirpstack/{{broker.user}}"
    method: PUT
    user: "{{broker.admin_user}}"
    password: "{{broker.admin_password}}"
    body_format: json
    body: |
      {
        "configure": ".*",
        "write": ".*",
        "read": ".*"
      }
    status_code: [201, 204]
    force_basic_auth: yes